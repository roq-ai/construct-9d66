generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model issue {
  id                           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description                  String   @db.VarChar(255)
  status                       String   @db.VarChar(50)
  type                         String   @db.VarChar(50)
  reported_by                  String   @db.Uuid
  assigned_to                  String   @db.Uuid
  created_at                   DateTime @default(now()) @db.Timestamp(6)
  updated_at                   DateTime @default(now()) @db.Timestamp(6)
  user_issue_assigned_toTouser user     @relation("issue_assigned_toTouser", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_issue_reported_byTouser user     @relation("issue_reported_byTouser", fields: [reported_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model time_entry {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String   @db.Uuid
  start_time DateTime @db.Timestamp(6)
  end_time   DateTime @db.Timestamp(6)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                         String       @unique @db.VarChar(255)
  firstName                     String?      @db.VarChar(255)
  lastName                      String?      @db.VarChar(255)
  roq_user_id                   String       @db.VarChar(255)
  tenant_id                     String       @db.VarChar(255)
  created_at                    DateTime     @default(now()) @db.Timestamp(6)
  updated_at                    DateTime     @default(now()) @db.Timestamp(6)
  company                       company[]
  issue_issue_assigned_toTouser issue[]      @relation("issue_assigned_toTouser")
  issue_issue_reported_byTouser issue[]      @relation("issue_reported_byTouser")
  time_entry                    time_entry[]
}
